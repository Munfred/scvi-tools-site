"use strict";(self.webpackChunkscvi_tools_site=self.webpackChunkscvi_tools_site||[]).push([[487],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3634:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={},s="Get Started",c={type:"mdx",permalink:"/get_started",source:"@site/src/pages/get_started.md"},p=[{value:"Basic installation",id:"basic-installation",children:[]},{value:"Resources",id:"resources",children:[]},{value:"Single-cell omics data analysis",id:"single-cell-omics-data-analysis",children:[{value:"scRNA-seq",id:"scrna-seq",children:[]},{value:"CITE-seq",id:"cite-seq",children:[]},{value:"Spatial transcriptomics",id:"spatial-transcriptomics",children:[]},{value:"scATAC-seq",id:"scatac-seq",children:[]}]},{value:"Methods developer toolkit",id:"methods-developer-toolkit",children:[]},{value:"Reference",id:"reference",children:[]}],d={toc:p};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"get-started"},"Get Started"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"scvi-tools")," (single-cell variational inference tools) is a package for probabilistic modeling of single-cell omics data, built on top of ",(0,o.kt)("a",{parentName:"p",href:"https://pytorch.org/"},"PyTorch")," and ",(0,o.kt)("a",{parentName:"p",href:"https://anndata.readthedocs.io/en/latest/"},"AnnData"),". The package hosts implementations of several models that perform a wide range of single-cell data analysis tasks, as well as the building blocks to rapidly prototype new probabilistic models."),(0,o.kt)("h2",{id:"basic-installation"},"Basic installation"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"scvi-tools")," can be installed with ",(0,o.kt)("inlineCode",{parentName:"p"},"pip")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"conda"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pip install scvi-tools\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"conda install scvi-tools -c bioconda -c conda-forge\n")),(0,o.kt)("p",null,"To leverage a GPU for inference, a version of ",(0,o.kt)("a",{parentName:"p",href:"https://pytorch.org/get-started/locally/"},"PyTorch")," that supports your GPU will need to be installed separately."),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Tutorials, API reference, and advanced installation guides are available in the ",(0,o.kt)("a",{parentName:"li",href:"https://docs.scvi-tools.org/en/stable/"},"docs"),"."),(0,o.kt)("li",{parentName:"ul"},"For discussion of usage, checkout out our ",(0,o.kt)("a",{parentName:"li",href:"https://discourse.scvi-tools.org/"},"forum"),"."),(0,o.kt)("li",{parentName:"ul"},"For immediate public chat with the developers, come talk to us on ",(0,o.kt)("a",{parentName:"li",href:"https://gitter.im/scvi-tools/"},"Gitter"),"."),(0,o.kt)("li",{parentName:"ul"},"For a skeleton of implementation of a new model in scvi-tools, refer to our ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/YosefLab/scvi-tools-skeleton/"},"template repository")),(0,o.kt)("li",{parentName:"ul"},"To report bugs, make an issue on ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/YosefLab/scvi-tools/issues"},"GitHub"),".")),(0,o.kt)("h2",{id:"single-cell-omics-data-analysis"},"Single-cell omics data analysis"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"scvi-tools")," hosts implementations of many models, with a convenient interface to ",(0,o.kt)("a",{parentName:"p",href:"https://scanpy.readthedocs.io/en/stable/"},"scanpy"),", ",(0,o.kt)("a",{parentName:"p",href:"https://satijalab.org/seurat/"},"Seurat")," and ",(0,o.kt)("a",{parentName:"p",href:"https://www.bioconductor.org/"},"Bioconductor")," (refer to our tutorials to learn about our R support):"),(0,o.kt)("h3",{id:"scrna-seq"},"scRNA-seq"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://rdcu.be/bdHYQ"},"scVI")," for analysis of single-cell RNA-seq data, as well as its improved ",(0,o.kt)("a",{parentName:"li",href:"https://www.biorxiv.org/content/biorxiv/early/2019/10/04/794289.full.pdf"},"differential expression framework"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://academic.oup.com/bioinformatics/article/36/11/3418/5807606"},"LDVAE")," for an interpretable linear factor model version of scVI."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.embopress.org/doi/full/10.15252/msb.20209620"},"scANVI")," for cell annotation of scRNA-seq data using semi-labeled examples."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nature.com/articles/s41592-019-0529-1"},"CellAssign")," for cell annotation of scRNA-seq data using marker genes."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.sciencedirect.com/science/article/pii/S2405471220301952"},"SOLO")," for detection of doublets."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.biorxiv.org/content/10.1101/2020.07.16.205997v1"},"scArches")," for transfer learning when learning cell embeddings in an online fashion (implemented for scVI, scANVI & totalVI)")),(0,o.kt)("h3",{id:"cite-seq"},"CITE-seq"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nature.com/articles/s41592-020-01050-x"},"totalVI")," for analysis of CITE-seq data.")),(0,o.kt)("h3",{id:"spatial-transcriptomics"},"Spatial transcriptomics"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nature.com/articles/s42003-020-01247-y"},"Steroscope")," for deconvolution of spatial transcriptomics data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/1905.02269.pdf"},"gimVI")," for imputation of missing genes in spatial transcriptomics from scRNA-seq data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.biorxiv.org/content/10.1101/2021.05.10.443517v1"},"DestVI")," for multi-resolution deconvolution of spatial transcriptomics data.")),(0,o.kt)("h3",{id:"scatac-seq"},"scATAC-seq"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.biorxiv.org/content/10.1101/2021.04.29.442020v1"},"peakVI")," for analysis of single-cell ATAC sequencing profiles")),(0,o.kt)("h2",{id:"methods-developer-toolkit"},"Methods developer toolkit"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"scvi-tools")," is a high-level probabilistic programming package especially developped for single-cell omics data. We hope it will empower method developers and help them focus on building fruitful models. To achieve this, we host black-box primitives for loading data from ",(0,o.kt)("a",{parentName:"p",href:"https://anndata.readthedocs.io/en/latest/"},"AnnData"),", black-box training procedures using ",(0,o.kt)("a",{parentName:"p",href:"https://www.pytorchlightning.ai/"},"PyTorch Lightning"),", and optionally provides automatic inference recipes based on ",(0,o.kt)("a",{parentName:"p",href:"https://pyro.ai/"},"Pyro"),". We currently support many optimization-based inference procedures including SVI, AEVB, MAP, MLE and EM. To learn more about the developer toolkit, please visit our ",(0,o.kt)("a",{parentName:"p",href:"https://docs.scvi-tools.org/en/latest/user_guide/index.html"},"tutorials"),". We also provide an example ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/YosefLab/scvi-tools-skeleton/"},"skeleton")," implementation of a basic scVI in PyTorch and Pyro as an independant package based off ",(0,o.kt)("inlineCode",{parentName:"p"},"scvi-tools"),". If you wish to add an implementation of your algorithm in scvi-tools, please post a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/YosefLab/scvi-tools/issues"},"GitHub issue")," to reach out to us."),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("p",null,"If you use scvi-tools in your research, please consider citing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"@article{Gayoso2021scvitools,\n    author = {Gayoso, Adam and Lopez, Romain and Xing, Galen and Boyeau, Pierre and Wu, Katherine and Jayasuriya, Michael and Mehlman, Edouard and Langevin, Maxime and Liu, Yining and Samaran, Jules and Misrachi, Gabriel and Nazaret, Achille and Clivio, Oscar and Xu, Chenling and Ashuach, Tal and Lotfollahi, Mohammad and Svensson, Valentine and da Veiga Beltrame, Eduardo and Talavera-Lopez, Carlos and Pachter, Lior and Theis, Fabian J and Streets, Aaron and Jordan, Michael I and Regier, Jeffrey and Yosef, Nir},\n    title = {scvi-tools: a library for deep probabilistic analysis of single-cell omics data},\n    year = {2021},\n    doi = {10.1101/2021.04.28.441833},\n    publisher = {Cold Spring Harbor Laboratory},\n    URL = {https://www.biorxiv.org/content/early/2021/04/29/2021.04.28.441833},\n    eprint = {https://www.biorxiv.org/content/early/2021/04/29/2021.04.28.441833.full.pdf},\n    journal = {bioRxiv}\n}\n")))}u.isMDXComponent=!0}}]);