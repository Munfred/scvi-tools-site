(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{137:function(e,a,t){"use strict";var n=t(0),r=t.n(n),l=t(1),s=t(160),o=t.n(s);function i(e){var a=e.category,t=e.title,n=e.subtitle,l=e.offset;return r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col col--"+(12-l)+" col--offset-"+l},r.a.createElement("div",{className:o.a.headline},a&&r.a.createElement("span",{className:o.a.category},a),t&&r.a.createElement("h2",{className:o.a.title},t),n&&r.a.createElement("h3",{className:o.a.subtitle},n))))}i.propTypes={category:l.PropTypes.string,title:l.PropTypes.string,subtitle:l.PropTypes.string,offset:l.PropTypes.number},i.defaultProps={offset:0},a.a=i},157:function(e,a,t){e.exports={heroBanner:"heroBanner_2Wl1",buttons:"buttons_2sHG",features:"features_3SLh",featureImage:"featureImage_28zy",main:"main_1fCo"}},159:function(e,a,t){"use strict";t(0),t(138),t(137),t(161)},160:function(e,a,t){e.exports={headline:"headline_280O",category:"category_3_Ue",title:"title_mstS",subtitle:"subtitle_29cp"}},161:function(e,a,t){e.exports={table:"table_1jSi",label:"label_14YB",result:"result_343J",resultH:"resultH_zs17",resultX:"resultX_3C1t"}},162:function(e,a,t){e.exports={code:"code_ddYG"}},165:function(e,a,t){},166:function(e,a,t){"use strict";var n=t(3),r=t(0),l=t.n(r),s=t(104),o=t(138),i=t(168),c=t(167),m=t.n(c),d=[{icon:l.a.createElement(i.a,{size:24}),title:l.a.createElement(l.a.Fragment,null,"End-to-end analysis"),description:l.a.createElement(l.a.Fragment,null,"Dimensionality reduction, dataset integration, differential expression, automated annotation. scvi-tools contains models that perform a wide variety of tasks across many omics. Checkout the ",l.a.createElement("a",{href:"https://docs.scvi-tools.org/en/stable/user_guide/index.html"},"user guide")," for all the details.")},{icon:l.a.createElement(o.b,{size:24}),title:l.a.createElement(l.a.Fragment,null,"Easy-to-use implementations"),description:l.a.createElement(l.a.Fragment,null,"Each model (e.g., scVI, scANVI, Stereoscope, totalVI) follows the same user interface that couples nicely with ",l.a.createElement("a",{href:"https://scanpy.readthedocs.io/en/stable/"},"Scanpy"),", ",l.a.createElement("a",{href:"https://satijalab.org/seurat/"},"Seurat"),", or ",l.a.createElement("a",{href:"https://www.bioconductor.org/"},"Bioconductor")," workflows. No more searching through source code.")},{icon:l.a.createElement(o.d,{size:24}),title:l.a.createElement(l.a.Fragment,null,"Rapid development of new models "),description:l.a.createElement(l.a.Fragment,null,"Building novel probabilistic models from scvi-tools is made easy with its object-oriented design and base components powered by ",l.a.createElement("a",{href:"https://pytorch.org"},"PyTorch"),", ",l.a.createElement("a",{href:"https://www.pytorchlightning.ai/"},"PyTorch Lightning"),", ",l.a.createElement("a",{href:"https://pyro.ai"},"Pyro"),", and ",l.a.createElement("a",{href:"https://anndata.readthedocs.io/en/latest/"},"AnnData"),". No need to write a dataloader or trainer ever again.")},{icon:l.a.createElement(i.b,{size:24}),title:l.a.createElement(l.a.Fragment,null,"Stochastic, GPU-accelerated inference"),description:l.a.createElement(l.a.Fragment,null,"scvi-tools models are trained efficiently through minibatching and can naturally be used with a GPU. These models are prepared to scale with growing dataset sizes.")}];function u(e){var a=e.icon,t=e.title,n=e.description;return l.a.createElement("div",{className:Object(s.a)("col col--6",m.a.feature)},l.a.createElement("div",{className:"item"},l.a.createElement("div",{className:m.a.header},a&&l.a.createElement("div",{className:m.a.icon},a),l.a.createElement("h2",{className:m.a.title},t)),l.a.createElement("p",null,n)))}a.a=function(){return l.a.createElement(l.a.Fragment,null,d&&d.length&&l.a.createElement("section",{id:"features",className:m.a.features},l.a.createElement("div",{className:"container"},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col col--11 col--offset-1"},l.a.createElement("div",{className:"row"},d.map((function(e,a){return l.a.createElement(u,Object(n.a)({key:a},e))}))))))))}},167:function(e,a,t){e.exports={features:"features_m4Wt",feature:"feature_16H5",header:"header_3I73",icon:"icon_1ZY4",title:"title_3Okf"}},169:function(e,a,t){"use strict";var n=t(0),r=t.n(n),l=(t(104),t(131)),s=t.n(l),o=(t(106),t(108)),i=t(112),c=t(23),m=t(170),d=t.n(m);a.a=function(){var e=Object(c.default)().siteConfig,a=void 0===e?{}:e;return r.a.createElement("header",{className:s()("hero",d.a.heroBanner)},r.a.createElement("div",{className:"container"},r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:s()("col col--6 col--offset-1")},r.a.createElement("h1",{className:"hero__title"},a.tagline),r.a.createElement(i.a,{className:"language-sh"},"pip install scvi-tools"),r.a.createElement("p",null,r.a.createElement("iframe",{src:"https://ghbtns.com/github-btn.html?user=yoseflab&repo=scvi-tools&type=star&count=true&size=large",frameborder:"0",scrolling:"0",width:"170",height:"30",title:"GitHub"}))),r.a.createElement("div",{className:s()("col col--4")},r.a.createElement("img",{src:Object(o.a)("img/graphical_model.svg"),alt:"Logo",className:d.a.heroImg})))))}},170:function(e,a,t){e.exports={heroImg:"heroImg_1kV2",heroBanner:"heroBanner_3zcx",buttons:"buttons_2Vr4"}},171:function(e,a,t){"use strict";var n=t(3),r=t(0),l=t.n(r),s=t(109),o=t(23),i=t(113),c=t(162),m=t.n(c);var d=function(e){var a=Object(o.default)().siteConfig.themeConfig.prism,t=void 0===a?{}:a,c=Object(r.useState)(!1),d=c[0],u=c[1];Object(r.useEffect)((function(){u(!0)}),[]);var p=Object(i.a)().isDarkTheme,f=t.theme,h=t.darkTheme||f,g=p?h:f,b=e.language,v=void 0===b?"python":b,E=e.code;return l.a.createElement(s.a,Object(n.a)({},s.b,{code:E,language:v,key:d,theme:g}),(function(e){var a=e.className,t=e.style,n=e.tokens,r=e.getLineProps,s=e.getTokenProps;return l.a.createElement("pre",{className:a+" "+m.a.code,style:t},n.map((function(e,a){return l.a.createElement("div",r({line:e,key:a}),e.map((function(e,a){return l.a.createElement("span",s({token:e,key:a}))})))})))}))},u=t(163),p=t(164),f=t(137),h=[{label:"scVI",code:'# scVI is for end-to-end analysis of scRNA-seq data\nimport anndata\nimport scvi\n\n# read data and prepare for scvi-tools\nadata = anndata.read("my_data.h5ad")\nscvi.data.setup_anndata(adata, batch_key="batch")\nmodel = scvi.model.SCVI(adata)\nmodel.train()\n\n# get integrated low-dimensional representation\nadata.obsm["X_scvi"] = model.get_latent_representation()\n\n# normalized expression\nadata.layers["scvi_norm"] = model.get_normalized_expression()\n\n# differential expression\nresults = model.differential_expression(groupby="cell types", group1="CD4", group2="CD8")'},{label:"scANVI",code:'# scANVI augments scVI to transfer cell type labels\nimport anndata\nimport scvi\n\n# read data and prepare for scvi-tools\n# adata contains partially observed cell type labels in adata.obs["labels"]\n# Unknown cells have the label "Unknown"\nadata = anndata.read("my_data.h5ad")\nscvi.data.setup_anndata(adata, batch_key="batch", labels_key="labels")\nmodel = scvi.model.SCANVI(adata, "Unknown")\nmodel.train()\n\n# cell type predictions\nadata.obs["predictions"] = model.predict()\n\n# get integrated low-dimensional representation\nadata.obsm["X_scanvi"] = model.get_latent_representation()\n\n# normalized expression\nadata.layers["scanvi_norm"] = model.get_normalized_expression()\n\n# differential expression\nresults = model.differential_expression(groupby="cell types", group1="CD4", group2="CD8")'},{label:"totalVI",code:'# totalVI is for end-to-end analysis of CITE-seq data\nimport anndata\nimport scvi\n\n# read data and prepare for scvi-tools\nadata = anndata.read("my_data.h5ad")\nscvi.data.setup_anndata(adata, protein_expression_obsm_key="proteins")\nmodel = scvi.model.TOTALVI(adata)\nmodel.train()\n\n# get integrated low-dimensional representation\nadata.obsm["X_totalvi"] = model.get_latent_representation()\n\n# normalized expression\nadata.layers["totalvi_norm"], adata.obsm["totalvi_pro_norm"] = model.get_normalized_expression()\n\n# differential expression\nresults = model.differential_expression(groupby="cell types", group1="CD4", group2="CD8")'}],g=t(165),b=t.n(g);a.a=function(){return l.a.createElement(l.a.Fragment,null,h&&h.length&&l.a.createElement("section",{id:"examples",className:b.a.examples},l.a.createElement("div",{className:"container"},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col col--10 col--offset-1"},l.a.createElement(f.a,{category:"Examples",title:"Overview of scvi-tools models"}),l.a.createElement("p",null,"Explore the broad functionality of each model."),l.a.createElement(u.a,{defaultValue:h[0].label,values:h.map((function(e,a){return{label:e.label,value:e.label}})),className:b.a.tabs},h.map((function(e,a){return l.a.createElement(p.a,{key:a,value:e.label},l.a.createElement(d,Object(n.a)({key:a},e)))}))))))))}},94:function(e,a,t){"use strict";t.r(a),function(e){var n=t(0),r=t.n(n),l=t(125),s=t(114),o=t(23),i=t(157),c=t.n(i),m=t(22),d=(t(159),t(171)),u=t(166),p=t(169);(void 0!==e?e:window).Prism=m.a,t(158),a.default=function(){var e=Object(o.default)().siteConfig,a=(void 0===e?{}:e).tagline;return r.a.createElement(l.b.Provider,{value:{style:{verticalAlign:"middle"}}},r.a.createElement(s.a,{description:a},r.a.createElement(p.a,null),r.a.createElement("main",{className:c.a.main},r.a.createElement(u.a,null),r.a.createElement(d.a,null))))}}.call(this,t(25))}}]);